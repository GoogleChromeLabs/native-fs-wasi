"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const t=new WeakMap;class e{constructor(){this.state={type:"Loading"},this.exports=null}invalidState(){throw new Error(`Invalid async state ${this.state.type}`)}wrapImportFn(t){return(...e)=>{switch(this.state.type){case"None":{let n=t(...e);return!(s=n)||"object"!=typeof s&&"function"!=typeof s||"function"!=typeof s.then?n:(this.exports.asyncify_start_unwind(16),this.state={type:"Unwinding",promise:n},0)}case"Rewinding":{let{value:t}=this.state;return this.state={type:"None"},this.exports.asyncify_stop_rewind(),t}default:this.invalidState()}var s}}wrapModuleImports(t){let e={};for(let s in t){let n=t[s];"function"==typeof n&&(n=this.wrapImportFn(n)),e[s]=n}return e}wrapImports(t){if(void 0===t)return;let e={};for(let s in t)e[s]=this.wrapModuleImports(t[s]);return e}wrapExportFn(e){let s=t.get(e);return void 0!==s?s:(s=async(...t)=>{"None"!==this.state.type&&this.invalidState();let s=e(...t);for(;"Unwinding"===this.state.type;){let t,{promise:n}=this.state;this.state={type:"None"},this.exports.asyncify_stop_unwind(),this.state={type:"Waiting"};try{t=await n}finally{this.state={type:"None"}}this.exports.asyncify_start_rewind(16),this.state={type:"Rewinding",value:t},s=e()}return"None"!==this.state.type&&this.invalidState(),s},t.set(e,s),s)}wrapExports(e){let s=t.get(e);if(void 0!==s)return s;s=Object.create(null);for(let t in e){let n=e[t];"function"!=typeof n||t.startsWith("asyncify_")||(n=this.wrapExportFn(n)),Object.defineProperty(s,t,{enumerable:!0,value:n})}return t.set(e,s),s}init(t,e){const{exports:n}=t,r=n.memory||e.env&&e.env.memory,i=new Int32Array(r.buffer,16);i[0]=24,i[1]=512,this.state={type:"None"},this.exports=this.wrapExports(n),Object.setPrototypeOf(t,s.prototype)}}class s extends WebAssembly.Instance{constructor(t,s){let n=new e;super(t,n.wrapImports(s)),n.init(this,s)}get exports(){return t.get(super.exports)}}Object.defineProperty(s.prototype,"exports",{enumerable:!0}),exports.Instance=s,exports.instantiate=async function(t,s){let n=new e,r=await WebAssembly.instantiate(t,n.wrapImports(s));return n.init(r instanceof WebAssembly.Instance?r:r.instance,s),r},exports.instantiateStreaming=async function(t,s){let n=new e,r=await WebAssembly.instantiateStreaming(t,n.wrapImports(s));return n.init(r.instance,s),r};
